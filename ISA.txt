000 00000 	nop


/* -------------- STACK INSTRUCTIONS -------------- */

000 0 0001	pop 			<ofs16>
000 0 0010	push_ofs 		&<ofs16>
000 0 0011	push_by_ofs 	<ofs16>
000 0 0100	push_b 			b <imm8>
000 0 0101	push_w 			w <imm16>
000 0 0110	push_d 			d <imm32>
000 0 0111	push_q 			q <imm64>
000 0 1000	swp
000 0 1001	sav 			<ofs16>
000 0 1010
000 0 1011
000 0 1100
000 0 1101
000 0 1110
000 0 1111
000 1 0000
000 1 0001
000 1 0010
000 1 0011
000 1 0100
000 1 0101
000 1 0110
000 1 0111
000 1 1000
000 1 1001
000 1 1010
000 1 1011
000 1 1100
000 1 1101
000 1 1110
000 1 1111


/* ----------- FLOW CONTROL INSTRUCTIONS ---------- */

001 0 0000	jmp 			<ofs16>
001 0 0001	jmp_by_offset	*<ofs16>
001 0 0010	je 				<ofs16>
001 0 0011	je_by_offset	*<ofs16>
001 0 0100	jl 				<ofs16>
001 0 0101	jl_by_offset	*<ofs16>
001 0 0110	jg 				<ofs16>
001 0 0111	jg_by_offset	*<ofs16>
001 0 1000	jle 			<ofs16>
001 0 1001	jle_by_offset	*<ofs16>
001 0 1010	jge 			<ofs16>
001 0 1011	jge_by_offset	*<ofs16>
001 0 1100	jez 			<ofs16>
001 0 1101	jez_by_offset	*<ofs16>
001 0 1110	jgz 			<ofs16>
001 0 1111	jgz_by_offset	*<ofs16>
001 1 0000	jlz 			<ofs16>
001 1 0001	jlz_by_offset	*<ofs16>
001 1 0010	jgez 			<ofs16>
001 1 0011	jgez_by_offset	*<ofs16>
001 1 0100	jlez 			<ofs16>
001 1 0101	jlez_by_offset	*<ofs16>
001 1 0110	call 			<ofs16 subroutineLabes> [imm8 argsNumber = 1]
001 1 0111	// DELETED // call_nargs		<ofs16> 
001 1 1000	ret 			
001 1 1001	ret_nvalues		<imm8>
001 1 1010
001 1 1011
001 1 1100
001 1 1101
001 1 1110
001 1 1111


/* ------------ ARITHMETIC INSTRUCTIONS ----------- */

010 0 0000	add
010 0 0001	sub
010 0 0010	inc
010 0 0011	dec
010 0 0100	mlt
010 0 0101	div
010 0 0110	mod
010 0 0111
010 0 1000
010 0 1001
010 0 1010
010 0 1011
010 0 1100
010 0 1101
010 0 1110
010 0 1111
010 1 0000
010 1 0001
010 1 0010
010 1 0011
010 1 0100
010 1 0101
010 1 0110
010 1 0111
010 1 1000
010 1 1001
010 1 1010
010 1 1011
010 1 1100
010 1 1101
010 1 1110
010 1 1111


/* ------------- BITWISE INSTRUCTIONS ------------- */

011 0 0000	bnot
011 0 0001	band
011 0 0010	bor
011 0 0011	bxor
011 0 0100
011 0 0101
011 0 0110
011 0 0111
011 0 1000
011 0 1001
011 0 1010
011 0 1011
011 0 1100
011 0 1101
011 0 1110
011 0 1111
011 1 0000
011 1 0001
011 1 0010
011 1 0011
011 1 0100
011 1 0101
011 1 0110
011 1 0111
011 1 1000
011 1 1001
011 1 1010
011 1 1011
011 1 1100
011 1 1101
011 1 1110
011 1 1111
 
/* ----------- INPUT/OUTPUT INSTRUCTIONS ---------- */

100 00000	inp_b				[imm8 number = 1]b <ofs16 dest>
100 00001	inp_b_stack			[imm8 number = 1]b
100 00010	inp_w				[imm8 number = 1]w <ofs16 dest>
100 00011	inp_w_stack			[imm8 number = 1]w
100 00100	inp_d				[imm8 number = 1]d <ofs16 dest>
100 00101	inp_d_stack			[imm8 number = 1]d
100 00110	inp_q				[imm8 number = 1]q <ofs16 dest>
100 00111	inp_q_stack			[imm8 number = 1]q
100 01000	inp_char			[imm8 number = 1]c <ofs16 dest>
100 01001	inp_char_stack		[imm8 number = 1]c
100 01010	out_b 				[imm8 number = 1]b <ofs16 dest>
100 01011	out_b_stack 		[imm8 number = 1]b
100 01100	out_w				[imm8 number = 1]w <ofs16 dest>
100 01101	out_w_stack			[imm8 number = 1]w
100 01110	out_d				[imm8 number = 1]d <ofs16 dest>
100 01111	out_d_stack			[imm8 number = 1]d
100 10000	out_q				[imm8 number = 1]q <ofs16 dest>
100 10001	out_q_stack			[imm8 number = 1]q
100 10010	out_char			[imm8 number = 1]c <ofs16 dest>
100 10011	out_char_stack		[imm8 number = 1]c
100 10100	
100 10101
100 10110
100 10111
100 11000
100 11001
100 11010
100 11011
100 11100
100 11101
100 11110
100 11111

/* -------------- OTHER INSTRUCTIONS -------------- */

101 00000	stop			[imm8 exitCode]
101 00001
101 00010
101 00011
101 00100
101 00101
101 00110
101 00111
101 01000
101 01001
101 01010
101 01011
101 01100
101 01101
101 01110
101 01111
101 10000
101 10001
101 10010
101 10011
101 10100
101 10101
101 10110
101 10111
101 11000
101 11001
101 11010
101 11011
101 11100
101 11101
101 11110
101 11111


/* ----------------- FREE OPCODES ----------------- */

110 00000
110 00001
110 00010
110 00011
110 00100
110 00101
110 00110
110 00111
110 01000
110 01001
110 01010
110 01011
110 01100
110 01101
110 01110
110 01111
110 10000
110 10001
110 10010
110 10011
110 10100
110 10101
110 10110
110 10111
110 11000
110 11001
110 11010
110 11011
110 11100
110 11101
110 11110
110 11111
111 00000
111 00001
111 00010
111 00011
111 00100
111 00101
111 00110
111 00111
111 01000
111 01001
111 01010
111 01011
111 01100
111 01101
111 01110
111 01111
111 10000
111 10001
111 10010
111 10011
111 10100
111 10101
111 10110
111 10111
111 11000
111 11001
111 11010
111 11011
111 11100
111 11101
111 11110
111 11111
