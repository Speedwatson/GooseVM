        <==============================O
        |   GOOSE ARCHITECTURE v4.0    |
        |            __                |
        |          >(' )               |
        |            )/    ~           |
        |           /(____/\           |
        |          /        )          |
        |          \ `  =~~/           |
        |           `-----|            |
        |        - - -  ~~^  - -       |
        +------------------------------+
        |   INSTRUCTION OPCODES SET    |
        +------------------------------+

/* -------- SYSTEM INSTRUCTIONS AND OTHER -------- */

00  ||  0000 0000   nop
01  ||  0000 000 1  brk

02  ||  0000 001 0--    -\  stop: <exitCodeFromStack: no/yes>
03  ||  0000 001 1---/      0000 001(1)

04  ||  0000 0100   // reserved
05  ||  0000 0101   // reserved
06  ||  0000 0110   // reserved
07  ||  0000 0111   // reserved
08  ||  0000 1000   // reserved
09  ||  0000 1001   // reserved
0A  ||  0000 1010   // reserved
0B  ||  0000 1011   // reserved
0C  ||  0000 1100   // reserved
0D  ||  0000 1101   // reserved
0E  ||  0000 1110   // reserved
0F  ||  0000 1111   // reserved
10  ||  0001 0000   // reserved
11  ||  0001 0001   // reserved
12  ||  0001 0010   // reserved
13  ||  0001 0011   // reserved
14  ||  0001 0100   // reserved
15  ||  0001 0101   // reserved
16  ||  0001 0110   // reserved
17  ||  0001 0111   // reserved
18  ||  0001 1000   // reserved
19  ||  0001 1001   // reserved
1A  ||  0001 1010   // reserved
1B  ||  0001 1011   // reserved
1C  ||  0001 1100   // reserved
1D  ||  0001 1101   // reserved
1E  ||  0001 1110   // reserved
1F  ||  0001 1111   // reserved


20  ||  0010 0000   // free // Stack instructions used to be here
21  ||  0010 0001   // free // but now they're expanded and moved
22  ||  0010 0010   // free
23  ||  0010 0011   // free
24  ||  0010 0100   // free
25  ||  0010 0101   // free
26  ||  0010 0110   // free
27  ||  0010 0111   // free
28  ||  0010 1000   // free
29  ||  0010 1001   // free
2A  ||  0010 1010   // free
2B  ||  0010 1011   // free
2C  ||  0010 1100   // free
2D  ||  0010 1101   // free
2E  ||  0010 1110   // free
2F  ||  0010 1111   // free
30  ||  0011 0000   // free
31  ||  0011 0001   // free
32  ||  0011 0010   // free // Flow control instructions used to be here
33  ||  0011 0011   // free // but now they're expanded and moved
34  ||  0011 0100   // free
35  ||  0011 0101   // free
36  ||  0011 0110   // free
37  ||  0011 0111   // free
38  ||  0011 1000   // free
39  ||  0011 1001   // free
3A  ||  0011 1010   // free
3B  ||  0011 1011   // free
3C  ||  0011 1100   // free
3D  ||  0011 1101   // free
3E  ||  0011 1110   // free
3F  ||  0011 1111   // free


/* ----- ARITHMETIC AND BITWISE INSTRUCTIONS ------ */

40  ||  0100 0000   // free
41  ||  0100 0001   // free
42  ||  0100 0010   // free
43  ||  0100 0011   // free
44  ||  0100 0100   // free
45  ||  0100 0101   // free
46  ||  0100 0110   // free
47  ||  0100 0111   // free
48  ||  0100 1000   // free
49  ||  0100 1001   // free
4A  ||  0100 1010   // free
4B  ||  0100 1011   // free
4C  ||  0100 1100   // free
4D  ||  0100 1101   // free
4E  ||  0100 1110   // free
4F  ||  0100 1111   // free

50  ||  0101 000 0--\   add: <neg: add/sub>
51  ||  0101 000 1--/       0101 000 (1)

52  ||  0101 001 0--\   inc: <neg: inc/dec>
53  ||  0101 001 1--/       0101 001 (1)

54  ||  0101 010 0--\   mlt: <neg: mlt/div>
55  ||  0101 010 1--/       0101 010 (1)

56  ||  0101 0110   mod
57  ||  0101 0111   band
58  ||  0101 1000   bor
59  ||  0101 1001   bxor

5A  ||  0101 1010   // free
5B  ||  0101 1011   // free
5C  ||  0101 1100   // free
5D  ||  0101 1101   // free
5E  ||  0101 1110   // free
5F  ||  0101 1111   // free


/* ----------- INPUT/OUTPUT INSTRUCTIONS ---------- */

60  ||  011 000 00--\
61  ||  011 000 01  |
62  ||  011 000 10  |
63  ||  011 000 11  |
64  ||  011 001 00  |
65  ||  011 001 01  |
66  ||  011 001 10  |
67  ||  011 001 11  |
68  ||  011 010 00  |
69  ||  011 010 01  |
6A  ||  011 010 10  |
6B  ||  011 010 11  |
6C  ||  011 011 00  |    
6D  ||  011 011 01  |   io: <mode: inp/out> <as_char: yes/no> <(srcofs/destofs)FromStack: yes/no> <type: b/w/d/q>
6E  ||  011 011 10  |       011 (1)(1)(1)(2)
6F  ||  011 011 11  |
70  ||  011 100 00  |
71  ||  011 100 01  |
72  ||  011 100 10  |
73  ||  011 100 11  |
74  ||  011 101 00  |
75  ||  011 101 01  |
76  ||  011 101 10  |
77  ||  011 101 11  |
78  ||  011 110 00  |
79  ||  011 110 01  |
7A  ||  011 110 10  |
7B  ||  011 110 11  |
7C  ||  011 111 00  |
7D  ||  011 111 01  |
7E  ||  011 111 10  |
7F  ||  011 111 11--/


/* ----------- FLOW CONTROL INSTRUCTIONS ---------- */

80  ||  1000 0000---\
81  ||  1000 0001   |
82  ||  1000 0010   |
83  ||  1000 0011   |
84  ||  1000 0100   |
85  ||  1000 0101   |
86  ||  1000 0110   |
87  ||  1000 0111   |
88  ||  1000 1000   |
89  ||  1000 1001   |
8A  ||  1000 1010   |
8B  ||  1000 1011   |
8C  ||  1000 1100   |
8D  ||  1000 1101   |
8E  ||  1000 1110   |
8F  ||  1000 1111   |  jmp_if: <plain?> <dereference/pop>, <zero: 2opds/1opdAndZero>, <comarator: g/ge/l/le>
90  ||  1001 0000   |      100 (1)(1)(1)(2)
91  ||  1001 0001   |
92  ||  1001 0010   |
93  ||  1001 0011   |
94  ||  1001 0100   |
95  ||  1001 0101   |
96  ||  1001 0110   |
97  ||  1001 0111   |
98  ||  1001 1000   |
99  ||  1001 1001   |
9A  ||  1001 1010   |
9B  ||  1001 1011   |
9C  ||  1001 1100   |
9D  ||  1001 1101   |
9E  ||  1001 1110   |
9F  ||  1001 1111---/

A0  ||  1010 0000--\
A1  ||  1010 0001  |
A2  ||  1010 0010  |
A3  ||  1010 0011  |    jmp_if_equal: <plain?> <dereference/pop> <zero: 1opds/1opdAndZero>
A4  ||  1010 0100  |        1010 0 (1)(1)(1)
A5  ||  1010 0101  |
A6  ||  1010 0110  |
A7  ||  1010 0111--/

A8  ||  1010 1000--\
A9  ||  1010 1001  |    jmp: <plain?> <dereference/pop>
AA  ||  1010 1010  |        1001 10 (1) (1)
AB  ||  1010 1011--/
AC  ||  1010 1100  call
AD  ||  1010 1101  ret
AE  ||  1010 1110  // free
AF  ||  1010 1111  // free
B0  ||  1011 0000
B1  ||  1011 0001
B2  ||  1011 0010
B3  ||  1011 0011
B4  ||  1011 0100
B5  ||  1011 0101
B6  ||  1011 0110
B7  ||  1011 0111
B8  ||  1011 1000
B9  ||  1011 1001
BA  ||  1011 1010
BB  ||  1011 1011
BC  ||  1011 1100
BD  ||  1011 1101
BE  ||  1011 1110
BF  ||  1011 1111


/* ----------------- FREE OPCODES ----------------- */

C0  ||  1100 0000   swp     // these are stack instructions, but I left them out of their block since their opcodes are hardcoded
C1  ||  1100 0001   dpl     // these are stack instructions, but I left them out of their block since their opcodes are hardcoded
C2  ||  1100 0010   // free
C3  ||  1100 0011   // free
C4  ||  1100 0100   // free
C5  ||  1100 0101   // free
C6  ||  1100 0110   // free
C7  ||  1100 0111   // free
C8  ||  1100 1000   // free
C9  ||  1100 1001   // free
CA  ||  1100 1010   // free
CB  ||  1100 1011   // free
CC  ||  1100 1100   // free
CD  ||  1100 1101   // free
CE  ||  1100 1110   // free
CF  ||  1100 1111   // free

D0  ||  1101 0000
D1  ||  1101 0001
D2  ||  1101 0010
D3  ||  1101 0011
D4  ||  1101 0100
D5  ||  1101 0101
D6  ||  1101 0110
D7  ||  1101 0111
D8  ||  1101 1000
D9  ||  1101 1001
DA  ||  1101 1010
DB  ||  1101 1011
DC  ||  1101 1100
DD  ||  1101 1101
DE  ||  1101 1110
DF  ||  1101 1111

/* -------------- STACK INSTRUCTIONS -------------- */

E0  ||  1110 0000---\
E1  ||  1110 0001   |
E2  ||  1110 0010   |
E3  ||  1110 0011   |
E4  ||  1110 0100   |
E5  ||  1110 0101   |
E6  ||  1110 0110   |
E7  ||  1110 0111   |   push: <plain?> <dereference/pop> <type: b/w/d/q>
E8  ||  1110 1000   |     1110 (1)(1)(2)
E9  ||  1110 1001   |
EA  ||  1110 1010   |
EB  ||  1110 1011   |
EC  ||  1110 1100   |
ED  ||  1110 1101   |
EE  ||  1110 1110   |
EF  ||  1110 1111---/

F0  ||  1111 0000---\ 
F1  ||  1111 0001   |
F2  ||  1111 0010   |
F3  ||  1111 0011   |
F4  ||  1111 0100   |
F5  ||  1111 0101   |
F6  ||  1111 0110   |   top: <save?: pop/sav> <deref_ofs/pop> <type: b/w/d/q>
F7  ||  1111 0111   |     1111 (1)(1)(2)
F8  ||  1111 1000   |
F9  ||  1111 1001   |
FA  ||  1111 1010   |
FB  ||  1111 1011   |
FC  ||  1111 1100   |
FD  ||  1111 1101   |
FE  ||  1111 1110   |
FF  ||  1111 1111---/
